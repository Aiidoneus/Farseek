def modName = project.name
def modPackage = modName.toLowerCase()
def coreModClass = "${modPackage}.core.${modName}CoreMod"

// ---------------------------------------------------------------------------------------------------------------------
// Decompile
// ---------------------------------------------------------------------------------------------------------------------
apply plugin: "scala"

apply plugin: "net.minecraftforge.gradle.forge"
minecraft {
    version = forgeRevision
    mappings = mcpMappings
}

task addLibraryTransformers {
    fileTree(dir: "libs", include: "*.jar").each { File jar ->
        zipTree(jar).each { File file ->
            if(file.name.endsWith("_at.cfg")) {
                deobfMcMCP.addAt(file)
                deobfMcSRG.addAt(file)
            }
        }
    }
}
tasks.setupDecompWorkspace.dependsOn(addLibraryTransformers)

apply plugin: "idea"
idea.module.excludeDirs += files(".idea", "gradle", "libs", "run")

// ---------------------------------------------------------------------------------------------------------------------
// Run
// ---------------------------------------------------------------------------------------------------------------------
def jvmArgs = "-Dfml.coreMods.load=farseek.core.FarseekCoreMod,$coreModClass"
minecraft {
    runDir = "run"
    clientJvmArgs += jvmArgs
    serverJvmArgs += jvmArgs
}

// ---------------------------------------------------------------------------------------------------------------------
// Build
// ---------------------------------------------------------------------------------------------------------------------
version = "${minecraft.version}-$modVersion"

minecraft {
    replaceIn "$modPackage/${modName}Mod.scala"
    replace "@Mod(", "@Mod(version=\"$version\", dependencies=\"required-after:$modDependencies\", "
}

jar.manifest {
    attributes "FMLAT": "${modName}_at.cfg"
    attributes "FMLCorePlugin": coreModClass
    attributes "FMLCorePluginContainsFMLMod": "affirmative"
}

task deobfJar(type: Jar) {
    classifier = "deobf"
    from sourceSets.main.output
    from "common.gradle"
}
tasks.jar.dependsOn("deobfJar")

// ---------------------------------------------------------------------------------------------------------------------
// Release
// ---------------------------------------------------------------------------------------------------------------------
def changeLog = file("changelog.md").text + """
Built using [Forge](http://files.minecraftforge.net/maven/net/minecraftforge/forge/index_${minecraft.version}.html)
${minecraft.forgeVersion} and [MCP mappings](http://export.mcpbot.bspk.rs) ${minecraft.mappings}.
"""
if(project.hasProperty("githubUser") && project.hasProperty("githubApiKey")) {
    apply plugin: "co.riiid.gradle"
    github {
        owner = githubUser
        token = githubApiKey
        repo = modName
        targetCommitish = minecraft.version
        tagName = "v$version"
        body = changeLog
    }
}
if(project.hasProperty("curseForgeId") && project.hasProperty("curseForgeApiKey")) {
    apply plugin: "com.matthewprenger.cursegradle"
    curseforge {
        apiKey = project.curseForgeApiKey
        project {
            id = curseForgeId
            releaseType = curseForgeReleaseType
            changelog = changeLog
            changelogType = "markdown"
            if(modName != "Farseek") relations { requiredLibrary "farseek" }
        }
    }
    tasks.curseforge.doFirst {
        mainArtifact.gameVersionStrings.remove("Java 6")
        mainArtifact.gameVersionStrings.remove("Java 7")
    }
}
